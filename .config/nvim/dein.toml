[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'othree/html5.vim'

[[plugins]]
repo = 'pangloss/vim-javascript'
hook_add = 'let g:javascript_plugin_flow = 1'

[[plugins]]
repo = 'mxw/vim-jsx'
hook_add = 'let g:jsx_ext_required = 1'

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_add = '''
  let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'slim-template/vim-slim'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']
  nmap <silent> <C-a>j <Plug>(ale_next_wrap)
  nmap <silent> <C-a>k <Plug>(ale_previous_wrap)

  let g:ale_python_yapf_use_global = 1

  let g:ale_fixers = {}
  let g:ale_fixers['javascript'] = ['prettier']
  let g:ale_fixers['typescript'] = ['prettier', 'tslint']
  let g:ale_fixers['python'] = ['yapf']
  "let g:ale_fixers['ruby'] = ['rufo']
  let g:ale_fix_on_save = 1
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
    \'colorscheme': 'wombat',
    \'active': {
    \  'left': [
    \    ['mode', 'paste'],
    \    ['readonly', 'filename', 'modified', 'ale'],
    \  ]
    \}
  \ }
'''

#[[plugins]]
#repo = 'maximbaz/lightline-ale'
#depends = ['lightline.vim', 'ale']
#hook_add = '''
#  let g:lightline.component_expand = {
#    \  'linter_checking': 'lightline#ale#checking',
#    \  'linter_warnings': 'lightline#ale#warnings',
#    \  'linter_errors': 'lightline#ale#errors',
#    \  'linter_ok': 'lightline#ale#ok',
#    \ }
#  let g:lightline.component_type = {
#    \  'linter_checking': 'left',
#    \  'linter_warnings': 'warning',
#    \  'linter_errors': 'error',
#    \  'linter_ok': 'left',
#    \ }
#'''


[[plugins]]
repo = 'szw/vim-tags'

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'mattn/jscomplete-vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  let g:quickrun_config = {}
  let g:quickrun_config.javascript = {
  \ 'type': 'javascript/nodejs'
\ }
'''

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
  let g:user_emmet_settings = {
  \    'javascript.jsx' : {
  \        'extends' : 'jsx',
  \    },
  \    'typescript' : {
  \        'extends' : 'jsx',
  \    }
  \}
'''

[[plugins]]
repo = 'w0ng/vim-hybrid'
hook_add = '''
  set background=dark
  au MyAutoCmd VimEnter * nested colorscheme hybrid
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_add = '''
  set hidden
  let g:LanguageClient_serverCommands = {
      \ 'ruby': ['solargraph', 'stdio'],
      \ 'go': ['go', 'run', 'github.com/sourcegraph/go-langserver'],
  \}
  nnoremap <F5> :call LanguageClient_contextMenu()<CR>
  " Or map each action separately
  nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
  nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
  nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
'''

[[plugins]]
repo = 'tpope/vim-endwise'
